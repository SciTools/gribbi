language: minimal
dist: xenial

env:
  matrix:
    - PYTHON_VERSION=3.6
    - PYTHON_VERSION=3.7

install:
  # Install miniconda
  # -----------------
  - >
    echo "Installing miniconda";
    export CONDA_BASE="https://repo.continuum.io/miniconda/Miniconda";
    if [[ "${PYTHON_VERSION}" == 2* ]]; then
      wget --quiet ${CONDA_BASE}2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget --quiet ${CONDA_BASE}3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi;
    bash miniconda.sh -b -p ${HOME}/miniconda;
    export PATH="${HOME}/miniconda/bin:${PATH}";

  # Configure the test environment
  # ------------------------------
  - >
    echo "Configuring testing environment";
    conda config --set always_yes yes --set changeps1 no;
    conda config --set show_channel_urls True;
    conda config --add channels conda-forge;
    conda update --quiet conda;
    ENV_NAME='test-environment';
    conda create --quiet -n ${ENV_NAME} python=${PYTHON_VERSION} mock filelock pep8;
    source activate ${ENV_NAME};

  # Customise the test environment
  # ------------------------------
  - >
    conda env update -n ${ENV_NAME} --quiet --file environment.yml;
    # Check installation of eccodes.
    python -m eccodes selfcheck;

  # Download and install iris-test-data
  # -----------------------------------
  - >
    export IRIS_TEST_DATA_REF="https://github.com/SciTools/iris-test-data/archive/master.zip";
    export IRIS_TEST_DATA_LOCATION="${HOME}/iris-test-data";
    mkdir ${IRIS_TEST_DATA_LOCATION};
    wget -O ${IRIS_TEST_DATA_LOCATION}/iris-test-data.zip ${IRIS_TEST_DATA_REF};
    unzip -q ${IRIS_TEST_DATA_LOCATION}/iris-test-data.zip -d ${IRIS_TEST_DATA_LOCATION};

  # Locate iris installation
  # ------------------------
  - export IRIS_DIR=$(python -c "import iris; import os.path; print(os.path.dirname(iris.__file__))")

  # Poke site.cfg to reference iris-test-data
  - >
    SITE_CFG="${IRIS_DIR}/etc/site.cfg";
    echo "[Resources]" > ${SITE_CFG};
    echo "test_data_dir = ${IRIS_TEST_DATA_LOCATION}/iris-test-data-master/test_data" >> ${SITE_CFG};

  # Install iris-grib itself
  # ------------------------
  - pip install . --no-deps

  # Install coveralls for test coverage
  # -----------------------------------
  - pip install coveralls

  # Summarise the environment
  # -------------------------
  - >
    conda list -n ${ENV_NAME};
    conda list -n ${ENV_NAME} --explicit;
    conda info -a;

script:
  # Ensure we can import iris_grib and that the tests pass
  # ------------------------------------------------------
  - coverage run setup.py test

after_success: coveralls
